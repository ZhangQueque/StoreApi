<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Store.Api</name>
    </assembly>
    <members>
        <member name="T:Store.Api.Controllers.AccountController">
            <summary>
            账号控制器
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.AccountController.GetCodeAsync(System.String)">
            <summary>
            获取验证码
            </summary>
            <param name="phone">手机号</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AccountController.EmailLoginAsync(Store.Dto.User_EmailLoginDto)">
            <summary>
            邮箱登录
            </summary>
            <param name="login">登录对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AccountController.EmailRegisterAsync(Store.Dto.User_EmailLoginDto)">
            <summary>
            邮箱注册，返回token         
            </summary>
            <param name="register">注册对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AccountController.PhoneLoginAsync(Store.Dto.User_PhoneLoginDto)">
            <summary>
            手机号登录验证
            </summary>
            <param name="login">登录对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AccountController.RetrievePasswordAsync(System.String)">
            <summary>
            找回密码
            </summary>
            <param name="email">邮箱</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AdminController.GetUserInfoAsync">
            <summary>
            用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AdminController.GetLogMsgAsync">
            <summary>
            消息日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AdminController.GetNumberAsync">
            <summary>
            网站计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.AdminController.GetChartDataAsync">
            <summary>
            统计图数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.CartsController.GetCartsAsync(System.Int32,System.Int32)">
            <summary>
            返回用户对应的购物车
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.CartsController.AddCartAsync(Store.Data.Entities.Cart)">
            <summary>
            购物车新增
            </summary>
            <param name="cart">新增对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.CartsController.DeleteCartAsync(System.Int32)">
            <summary>
            购物车删除
            </summary>
            <param name="id">购物车主键</param>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Controllers.OrdersController">
            <summary>
            订单控制器
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.GetCartsAsync">
            <summary>
            返回用户对应的订单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.GetCartsAllAsync">
            <summary>
            获取全部订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.AddOrderAsync(Store.Data.Entities.Order)">
            <summary>
            新增订单
            </summary>
            <param name="order">新增对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.UpdateStatusTo1(System.Int32)">
            <summary>
            订单支付 （1代表订单已支付）
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.UpdateStatusTo2(System.Int32)">
            <summary>
            订单发货（2代表订单已发货）
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.UpdateStatusTo3(System.Int32)">
            <summary>
            确认收货（3代表订单已收货）
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.UpdateStatusTo5(System.Int32)">
            <summary>
            申请退款（5代表申请退款）
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.UpdateStatusTo4(System.Int32)">
            <summary>
            订单取消 (4代表订单已取消，交易关闭)
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.OrdersController.DeleteOrderAsync(System.Int32)">
            <summary>
            删除订单记录
            </summary>
            <param name="id">订单主键</param>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Controllers.ProductCategoriesController">
            <summary>
            商品类别API
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.ProductCategoriesController.GetTreeAsync(System.Int32)">
            <summary>
            获取商品类别树结构列表
            </summary>
            <param name="id">商品类别id</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductCategoriesController.GetParentTypesAsync">
            <summary>
            获取父类别
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductCategoriesController.GetChildTypesAsync(System.Int32)">
            <summary>
            获取子类别
            </summary>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Controllers.ProductsController">
            <summary>
            商品
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetProductsAsync(System.Int32,Store.Core.Pages.PageParameters)">
            <summary>
            商品信息列表
            </summary>
            <param name="typeId">商品类别</param>
            <param name="pageParameters">查询参数</param>
            <returns></returns>     
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetProductByIdAsync(System.Int32)">
            <summary>
            获取单个商品信息（及时加载）
            </summary>
            <param name="id">商品主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetProductImagesAsync(System.Int32)">
            <summary>
            获取商品下的所有图片
            </summary>
            <param name="id">商品主键</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.CreateProductImagesAsync(System.Int32,Store.Dto.Product_ImageDto)">
            <summary>
            商品图片添加
            </summary>
            <param name="id">商品主键</param>
            <param name="product_ImageDto">图片对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetNewProductsAsync">
            <summary>
            最新商品
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetShopTopProductsAsync">
            <summary>
            销量最高商品
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetPageViewTopProductsAsync">
            <summary>
            推荐商品
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.CreateProductAsync(Store.Dto.ProductCreateDto)">
            <summary>
            商品创建
            </summary>
            <param name="productCreateDto"></param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.GetProductAllByAdmin(System.Int32,System.Int32,System.String)">
            <summary>
            获取全部商品
            </summary>
            <param name="index">页索引</param>
            <param name="size">每页显示个数</param>
            <param name="name">查询名称</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.EditProductAsync(System.Int32,Store.Dto.ProductCreateDto)">
            <summary>
            商品修改
            </summary>
            <param name="id">商品主键</param>
            <param name="productCreateDto">修改对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.CreateProductBlog(System.Int32,Store.Data.Entities.Product_Describe)">
            <summary>
            添加商品博客
            </summary>k
            <param name="id">商品主键</param>
            <param name="product_Describe">博客对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.ProductsController.ProductToStatus1(System.Int32,System.String)">
            <summary>
            更改商品状态
            </summary>
            <param name="id">商品主键</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Controllers.TestController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.TestController.Get">
            <summary>
            测试数据
            </summary>
            <returns>测试数据</returns>
        </member>
        <member name="T:Store.Api.Controllers.UsersController">
            <summary>
            公共控制器     切记 这里不是专注于用户，更像是一个公共的控制器
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.ViewAddAsync">
            <summary>
            网站访问量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.GetCommonDtoAsync">
            <summary>
            获取公共数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.LogOutAsync">
            <summary>
            注销
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.UserUpdateAsync(Store.Dto.UserUpdateDto)">
            <summary>
            编辑用户信息
            </summary>
            <param name="userUpdateDto">用户修改对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.UserUpdatePasswordAsync(Store.Dto.UpdatePasswordDto)">
            <summary>
            修改密码
            </summary>
            <param name="updatePasswordDto">修改密码对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.UpdatePhone">
            <summary>
            取消手机绑定
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.GetUsersAsync">
            <summary>
            获取全部用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.GetRolesAsync">
            <summary>
            获取全部角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.UpdateUserStatus(System.Int32,System.String)">
            <summary>
            更改用户状态
            </summary>
            <param name="id">用户id</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.DeleteUser(System.Int32,System.String)">
            <summary>
            删除 用户
            </summary>
            <param name="id">用户id</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.ToUserLogOut(System.Int32,System.String)">
            <summary>
            强制下线
            </summary>
            <param name="id">用户id</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.UsersController.UserToRole(System.Int32,System.Int32,System.String)">
            <summary>
            分配角色
            </summary>
            <param name="userId">用户id</param>
            <param name="roleId">角色id</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Controllers.WishsController">
            <summary>
            商品收藏
            </summary>
        </member>
        <member name="M:Store.Api.Controllers.WishsController.GetWishDtosAsync(System.Int32,System.Int32)">
            <summary>
            用户对应的收藏列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.WishsController.AddWishAsync(Store.Data.Entities.Wish)">
            <summary>
            添加收藏
            </summary>
            <param name="wish">收藏对象</param>
            <returns></returns>
        </member>
        <member name="M:Store.Api.Controllers.WishsController.DeleteWishAsync(System.Int32)">
            <summary>
            删除收藏
            </summary>
            <param name="id">收藏主键</param>
            <returns></returns>
        </member>
        <member name="T:Store.Api.Filter.ErrorClass">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:Store.Api.Models.SecurityConfigOptions">
            <summary>
            jwt 配置文件
            </summary>
        </member>
        <member name="T:Store.Api.RedisCache.RedisCacheHelper">
            <summary>
            redis缓冲帮助类
            </summary>
        </member>
    </members>
</doc>
